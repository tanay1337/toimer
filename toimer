#!/usr/bin/env bash

function help_message() {
  echo "╭──────────────────────────────────────────────────────────╮"
  echo "│                        Toimer                            │"
  echo "╰──────────────────────────────────────────────────────────╯"
  echo ""
  echo "USAGE:"
  echo "  toimer [options]"
  echo ""
  echo "OPTIONS:"
  echo "  help                      Prints this help message"
  echo "  -s, seconds               Sets a timer for n seconds"
  echo "  -m, minutes               Sets a timer for n minutes"
  echo "  -h, hours                 Sets a timer for n hours"
  echo ""
  echo "KEYPRESSES:"
  echo "  p                         Pauses (and resumes) a timer"
  echo "  r                         Restarts a timer"
  echo ""
  echo "╭──────────────────────────────────────────────────────────╮"
  echo "│           https://github.com/tanay1337/toimer            │"
  echo "╰──────────────────────────────────────────────────────────╯"
}

ORIGINAL_TIME=

function countdown() {
  start="$(( $(date '+%s') + $1))"
  while [ $start -ge $(date +%s) ]; do
    time="$(( $start - $(date +%s) ))"
    printf '\033[K%s\r' "$(date -u -d "@$time" +%H:%M:%S)" &
    read -rsn1 -t 0.01 input 
    if [[ $input = "p" ]]; then
      pause $time
      break
    elif [[ $input = "r" ]]; then
      countdown ${ORIGINAL_TIME}
      break
    fi
    sleep 0.1
  done
}

function pause() {
  printf "\033[K\rTimer paused. Press p to resume or r to reset. "
  read -rsn1 input 
  if [[ $input = "r" ]]; then
    countdown ${ORIGINAL_TIME}
  elif [[ ! -z $input ]]; then
    countdown ${1}
  fi
}

function handler() {
  ORIGINAL_TIME=$1
  if [[ -z $3 ]]; then
    echo "Toimer set for ${1} ${2}."
    countdown $1
    notify-send -u critical "Toimer" "You set a timer for ${1} ${2}. The time is up!"
  else
    echo "Toimer set for ${3} ${2}."
    countdown $1
    notify-send -u critical "Toimer" "You set a timer for ${3} ${2}. The time is up!"
  fi
}

if [[ -z $2 ]]; then
  if [[ $1 = 'help' ]] || [[ -z $1 ]]; then
    help_message
  else
    ARG=$1
    handler $((ARG*60)) "minute(s)" $ARG
  fi
else
  MODE=$1
  TIMER=$2

  case $MODE in
    "-s" )
      handler $TIMER "second(s)" ;;
    "-m" )
      handler $((TIMER*60)) "minute(s)" $TIMER ;;
    "-h" )
      handler $((TIMER*60*60)) "hour(s)" $TIMER ;;
  esac
fi
